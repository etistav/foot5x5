<?php

namespace foot5x5\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
use foot5x5\UserBundle\Entity\User;

/**
 * RolesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RolesRepository extends EntityRepository
{
	public function assignRole(User $user, Community $community, string $role) {
		$userRole = new Roles();
		
		
		
	}
	
	public function getRoleForCommunity(User $user, Community $community)
	{
	    $qb = $this->createQueryBuilder('rol')
	    ->where('rol.community = :community')
	    ->andWhere('rol.user = :user')
	    ->setParameter('community', $community)
	    ->setParameter('user', $user);
	    
	    try {
	        $result = $qb->getQuery()->getSingleResult();
	        $role = $result->getRole();
	    } catch (NoResultException $e) {
	        return "";
	    }
	    
	    return $role;
	}
	
	public function listAllUsersByCommunity($communityId)
	{

	    $qb = $this->createQueryBuilder('rol')
	    ->leftJoin('rol.user', 'usr')
	    ->addSelect('usr')
	    ->where('rol.community = :cmnId')
	    ->setParameter('cmnId', $communityId)
	    ->addOrderBy('usr.username', 'ASC');
	    
	    return $qb->getQuery()->getResult();
	}

	public function listAllAdminUsersByCommunity($communityId)
	{
		$roleAdmin = "ROLE_ADMIN";
	    $qb = $this->createQueryBuilder('rol')
	    ->leftJoin('rol.user', 'usr')
	    ->addSelect('usr')
		->where('rol.community = :cmnId')
		->andWhere('rol.role = :rolAdmin')
		->setParameter('cmnId', $communityId)
		->setParameter('rolAdmin', $roleAdmin)
	    ->addOrderBy('usr.username', 'ASC');
	    
	    return $qb->getQuery()->getResult();
	}
	
}
