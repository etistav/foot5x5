<?php

namespace foot5x5\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;
use foot5x5\UserBundle\Entity\User;

/**
 * PlayerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlayerRepository extends EntityRepository
{
	public function findAll() {
    	$qb = $this->createQueryBuilder('plr')
    		->addOrderBy('plr.name', 'ASC');

    	return $qb->getQuery()->getResult();
    }

    public function findAllActives() {
        $isActive = 1;
        $qb = $this->createQueryBuilder('plr')
            ->where('plr.isActive = :isActive')
            ->setParameter('isActive', $isActive)
            ->addOrderBy('plr.name', 'ASC');

        return $qb->getQuery()->getResult();
    }

    public function findNotesFromUser(User $user) {
        $qb = $this->createQueryBuilder('plr')
            ->leftJoin('plr.notes', 'notes', 'WITH', 'notes.evaluator = :user')
            ->addSelect('notes')
            ->setParameter('user', $user)
            ->addOrderBy('plr.name', 'ASC');
        return $qb->getQuery()->getResult();
    }

    public function findAllWithDebts() {
        $qb = $this->createQueryBuilder('plr')
            ->where('plr.cashBalance < 0')
            ->addOrderBy('plr.cashBalance', 'ASC')
            ->addOrderBy('plr.name', 'ASC');

        return $qb->getQuery()->getResult();
    }

    public function calcTotalDebts() {
        $qb = $this->createQueryBuilder('plr')
            ->addSelect("sum(plr.cashBalance) AS total")
            ->where('plr.cashBalance < 0');

        return $qb->getQuery()->getSingleResult();
    }

    public function findAllWithCredits() {
        $qb = $this->createQueryBuilder('plr')
            ->where('plr.cashBalance > 0')
            ->addOrderBy('plr.cashBalance', 'DESC')
            ->addOrderBy('plr.name', 'ASC');

        return $qb->getQuery()->getResult();
    }

    public function calcTotalCredits() {
        $qb = $this->createQueryBuilder('plr')
            ->addSelect("sum(plr.cashBalance) AS total")
            ->where('plr.cashBalance > 0');

        return $qb->getQuery()->getSingleResult();
    }
}
